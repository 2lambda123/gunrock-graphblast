Scott’s idea about attaching semiring as part of matrix/vector
  -to automate process of switching to another semiring (check whether legal/makes sense)
  -how to keep stored zeros from propagating (convert to structural zeros)
  -how to prevent stored zeros from turning into new zeros in new semi-ring
  -matlab has utility function
  -structural zero must be annihilator of semi-ring

  -example: Brandeis forward BFS, backward BFS (with different semi-ring)
  -Q: is matrix a semi-ring, does matrix have a semi-ring?
  -More than 2 choices:
    -defined in terms of semi-ring
  -explicit_cast into new semi-ring
    -sometimes no-op, sometimes convert to new semi-ring

  -type: matrix type does not follow computer science definitions
  -tolerance for converting sparse -> dense, dense -> sparse (perhaps stored in descriptor)

Idea: add rule-checking for those rules in Elements of Programming semi-ring

-what methods on objects should there be?
-A.getnnz()
-good when you can avoid implementing free functions
-must check NULL when using pointers
-min, select2nd
-helper methods:
  -getDim()
  -argmin

-decision on what to template on
-Scott templates on entire matrix type rather than Scalar
-can use “using” instead of allocator_traits

